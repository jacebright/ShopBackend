{
  "swagger": "2.0",
  "info": {
    "title": "Shop Backend API",
    "description": "API for CSE341 shop backend group project",
    "version": "1.0.0"
  },
  "basePath": "/",
  "schemes": [
    null
  ],
  "paths": {
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get All Users",
        "description": "",
        "produces": [
          "applications/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add User",
        "description": "Add user to the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "favoriteColor": {
                  "example": "any"
                },
                "accountType": {
                  "example": "any"
                },
                "dateCreated": {
                  "example": "any"
                },
                "dateUpdated": {
                  "example": "any"
                },
                "cartId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User by Id",
        "description": "Get specific user by id.",
        "produces": [
          "applications/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Edit User",
        "description": "Edit specific user by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "accountType": {
                  "example": "any"
                },
                "dateCreated": {
                  "example": "any"
                },
                "dateUpdated": {
                  "example": "any"
                },
                "cartId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete User",
        "description": "Delete user by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Deleted item successfully."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/product/": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get All Products",
        "description": "",
        "produces": [
          "applications/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add Product",
        "description": "Add product to the database.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productId": {
                  "example": "any"
                },
                "productPrice": {
                  "example": "any"
                },
                "productName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get Product by Id",
        "description": "Get specific product by id.",
        "produces": [
          "applications/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Edit Product",
        "description": "Edit specific product by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "productName": {
                  "example": "any"
                },
                "productInventory": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete Product",
        "description": "Delete product by Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted item successfully."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cart/": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get All Carts",
        "description": "",
        "produces": [
          "applications/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cart"
        ],
        "summary": "Create Cart",
        "description": "Create a new cart record in the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                },
                "cartTotal": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/cart/{id}": {
      "get": {
        "tags": [
          "Cart"
        ],
        "summary": "Get Cart by Id",
        "description": "Get a specific cart by the id of the cart",
        "produces": [
          "applications/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cart"
        ],
        "summary": "Edit Cart",
        "description": "Edit a cart by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "products": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                },
                "cartTotal": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Cart"
        ],
        "summary": "Delete Cart",
        "description": "Delete cart by provided Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Item deleted successfully."
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/order/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get All Orders",
        "description": "Get all orders in the database",
        "produces": [
          "applications/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create Order",
        "description": "Create order that will be stored in the database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "cartId": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                },
                "dateCreated": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/order/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get Order by Id",
        "description": "Get specific order by id.",
        "produces": [
          "applications/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Edit Order",
        "description": "Edit specific order by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "cartId": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                },
                "dateCreated": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete Order",
        "description": "Delete specific order",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted item successfully"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Errors"
            },
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NotFound": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Resource not found."
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "An error occurred."
        }
      }
    },
    "Errors": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Error"
      }
    },
    "Unauthorized": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "Unauthorized. Failed to authenticate."
        }
      }
    }
  }
}